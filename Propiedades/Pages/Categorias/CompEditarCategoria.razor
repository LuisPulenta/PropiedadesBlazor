@page "/editar-categoria/{Id:int}"

@inject ICategoriaRepositorio CategoriaRepositorio
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

<h1 class="text-center">Editar Categoría</h1>

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-7">
                <h2 class="text-dark">Editar Categoría Existente</h2>
            </div>
        </div>
    </div>
    <div class="card-body">
        <EditForm Model="categoriaDTO" OnValidSubmit="@( () => ManejadorOnEditarCategoria())">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="container">

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <label>Nombre: </label>
                        </div>
                        <div class="col-6">
                            <InputText @bind-Value="categoriaDTO.NombreCategoria" class="form-control" placeholder="Ingresa el nombre"></InputText>
                            <ValidationMessage For="() => categoriaDTO.NombreCategoria"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <label>Descripción: </label>
                        </div>
                        <div class="col-6">
                            <InputText @bind-Value="categoriaDTO.Descripcion" class="form-control" placeholder="Ingresa la descripción"></InputText>
                            <ValidationMessage For="() => categoriaDTO.Descripcion"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <button type="submit" class="btn btn-sm btn-outline-success"><i class="bi bi-gear-fill"></i>&nbsp; Guardar Categoría</button>
                        </div>
                        <div class="col-6">
                            <NavLink href="categorias" class="btn btn-sm btn-outline-secondary"><i class="bi bi-arrow-left-circle-fill"></i>&nbsp; Volver atrás</NavLink>
                        </div>
                    </div>
                </div>
                <br />

            </div>
        </EditForm>
    </div>
</div>


@code {
    [Parameter]
    public int? Id { get; set; }
    private CategoriaDTO categoriaDTO { get; set; } = new CategoriaDTO();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            categoriaDTO = await CategoriaRepositorio.GetCategoria(Id.Value);
        }

    }

    private async Task ManejadorOnEditarCategoria()
    {
        try
        {
            var categoria = await CategoriaRepositorio.GetCategoria(categoriaDTO.Id);
            if (categoria == null)
            {
                return;
            }

            var nombreCategoria = await CategoriaRepositorio.NombreCategoriaExiste(categoriaDTO.NombreCategoria);
            
            if (nombreCategoria != null)
            {
                if (categoriaDTO.NombreCategoria != categoria.NombreCategoria)
                {
                    await JSRuntime.ToastrError("Esta Categoría ya existe");
                    return;
                }
            }

            await CategoriaRepositorio.ActualizarCategoria(categoriaDTO.Id, categoriaDTO);
            await JSRuntime.ToastrSuccess("Categoría actualizada con éxito");
            navigationManager.NavigateTo("categorias");
        }
        catch (Exception ex)
        {
            return;
        }
    }
}
